--- board/ti/am335x/board.c.orig	2018-04-02 09:31:57.286083617 +0200
+++ board/ti/am335x/board.c	2018-04-02 09:33:07.546771756 +0200
@@ -724,11 +724,6 @@
 #ifdef CONFIG_BOARD_LATE_INIT
 int board_late_init(void)
 {
-#if !defined(CONFIG_SPL_BUILD)
-	uint8_t mac_addr[6];
-	uint32_t mac_hi, mac_lo;
-#endif
-
 #ifdef CONFIG_ENV_VARS_UBOOT_RUNTIME_CONFIG
 	char *name = NULL;
 
@@ -780,39 +775,6 @@
 		env_set("boot_fit", "1");
 #endif
 
-#if !defined(CONFIG_SPL_BUILD)
-	/* try reading mac address from efuse */
-	mac_lo = readl(&cdev->macid0l);
-	mac_hi = readl(&cdev->macid0h);
-	mac_addr[0] = mac_hi & 0xFF;
-	mac_addr[1] = (mac_hi & 0xFF00) >> 8;
-	mac_addr[2] = (mac_hi & 0xFF0000) >> 16;
-	mac_addr[3] = (mac_hi & 0xFF000000) >> 24;
-	mac_addr[4] = mac_lo & 0xFF;
-	mac_addr[5] = (mac_lo & 0xFF00) >> 8;
-
-	if (!env_get("ethaddr")) {
-		printf("<ethaddr> not set. Validating first E-fuse MAC\n");
-
-		if (is_valid_ethaddr(mac_addr))
-			eth_env_set_enetaddr("ethaddr", mac_addr);
-	}
-
-	mac_lo = readl(&cdev->macid1l);
-	mac_hi = readl(&cdev->macid1h);
-	mac_addr[0] = mac_hi & 0xFF;
-	mac_addr[1] = (mac_hi & 0xFF00) >> 8;
-	mac_addr[2] = (mac_hi & 0xFF0000) >> 16;
-	mac_addr[3] = (mac_hi & 0xFF000000) >> 24;
-	mac_addr[4] = mac_lo & 0xFF;
-	mac_addr[5] = (mac_lo & 0xFF00) >> 8;
-
-	if (!env_get("eth1addr")) {
-		if (is_valid_ethaddr(mac_addr))
-			eth_env_set_enetaddr("eth1addr", mac_addr);
-	}
-#endif
-
 	return 0;
 }
 #endif
--- cmd/fs.c.orig	2018-03-13 13:02:19.000000000 +0100
+++ cmd/fs.c	2018-04-02 09:31:57.290083655 +0200
@@ -27,8 +27,6 @@
 static int do_load_wrapper(cmd_tbl_t *cmdtp, int flag, int argc,
 				char * const argv[])
 {
-	efi_set_bootdev(argv[1], (argc > 2) ? argv[2] : "",
-			(argc > 4) ? argv[4] : "");
 	return do_load(cmdtp, flag, argc, argv, FS_TYPE_ANY);
 }
 
--- include/configs/am335x_evm.h.orig	2018-04-17 15:31:24.416914993 +0200
+++ include/configs/am335x_evm.h	2018-04-17 15:37:04.511463581 +0200
@@ -81,157 +81,41 @@
 
 #define BOOT_TARGET_DEVICES(func) \
 	func(MMC, mmc, 0) \
-	func(LEGACY_MMC, legacy_mmc, 0) \
-	func(MMC, mmc, 1) \
-	func(LEGACY_MMC, legacy_mmc, 1) \
-	func(PXE, pxe, na) \
-	func(DHCP, dhcp, na)
-
-#include <config_distro_bootcmd.h>
+	func(MMC, mmc, 1)
 
 #ifndef CONFIG_SPL_BUILD
 #include <environment/ti/dfu.h>
 #include <environment/ti/mmc.h>
 
+#define CONFIG_BOOTCOMMAND						\
+	"mmc dev 0; if test $? = 0; then setenv mmcdev 0; "		\
+	"else mmc dev 1; setenv mmcdev 1; fi; "				\
+	"setenv BOOTPART mmcblk${mmcdev}p1; "				\
+	"load mmc ${mmcdev}:1 0x80000000 boards.img; "			\
+	"source 0x80000000};"						\
+	"echo; "							\
+	"setenv CMDLINE console=${console} quiet OPTIONS=0x032C; "	\
+	"echo Loading MuntsOS boot configuration file config.txt; "	\
+	"load mmc ${mmcdev}:1 0x80000000 config.txt; "			\
+	"env import -t -r 0x80000000 ${filesize}; "			\
+	"echo Loading MuntsOS kernel file ${KERNEL}; "			\
+	"load mmc ${mmcdev}:1 0x82000000 ${KERNEL}; "			\
+	"echo Loading device tree file ${DTB}; "			\
+	"load mmc ${mmcdev}:1 0x88000000 ${DTB}; "			\
+	"for OVL in ${OVERLAYS}; do "					\
+	"  echo Loading device tree overlay file ${OVL}.dtbo; "		\
+	"  load mmc ${mmcdev}:1 0x89000000 overlays/${OVL}.dtbo; "	\
+	"  fdt addr 0x88000000; "					\
+	"  fdt resize 0x100000; "					\
+	"  fdt apply 0x89000000; "					\
+	"done; " 							\
+	"echo; "							\
+	"setenv bootargs BOARDNAME=${BOARDNAME} BOOTPART=${BOOTPART} "	\
+	"${CMDLINE}; "							\
+	"bootz 0x82000000 - 0x88000000"
+ 
 #define CONFIG_EXTRA_ENV_SETTINGS \
-	DEFAULT_LINUX_BOOT_ENV \
-	DEFAULT_MMC_TI_ARGS \
-	DEFAULT_FIT_TI_ARGS \
-	"bootpart=0:2\0" \
-	"bootdir=/boot\0" \
-	"bootfile=zImage\0" \
-	"board_eeprom_header=undefined\0" \
-	"fdtfile=undefined\0" \
-	"console=ttyO0,115200n8\0" \
-	"partitions=" \
-		"uuid_disk=${uuid_gpt_disk};" \
-		"name=bootloader,start=384K,size=1792K," \
-			"uuid=${uuid_gpt_bootloader};" \
-		"name=rootfs,start=2688K,size=-,uuid=${uuid_gpt_rootfs}\0" \
-	"optargs=\0" \
-	"ramroot=/dev/ram0 rw\0" \
-	"ramrootfstype=ext2\0" \
-	"spiroot=/dev/mtdblock4 rw\0" \
-	"spirootfstype=jffs2\0" \
-	"spisrcaddr=0xe0000\0" \
-	"spiimgsize=0x362000\0" \
-	"spibusno=0\0" \
-	"spiargs=setenv bootargs console=${console} " \
-		"${optargs} " \
-		"root=${spiroot} " \
-		"rootfstype=${spirootfstype}\0" \
-	"ramargs=setenv bootargs console=${console} " \
-		"${optargs} " \
-		"root=${ramroot} " \
-		"rootfstype=${ramrootfstype}\0" \
-	"loadramdisk=load mmc ${mmcdev} ${rdaddr} ramdisk.gz\0" \
-	"spiboot=echo Booting from spi ...; " \
-		"run spiargs; " \
-		"sf probe ${spibusno}:0; " \
-		"sf read ${loadaddr} ${spisrcaddr} ${spiimgsize}; " \
-		"bootz ${loadaddr}\0" \
-	"ramboot=echo Booting from ramdisk ...; " \
-		"run ramargs; " \
-		"bootz ${loadaddr} ${rdaddr} ${fdtaddr}\0" \
-	"pb_eeprom_hdr=" \
-		"mw 82001000 ee3355aa; " \
-		"mw 82001004 35333341; " \
-		"mw 82001008 4c474250\0" \
-	"serverip=192.168.1.1\0" \
-	"ipaddr=192.168.1.2\0" \
-	"if_netconsole=ping $serverip\0" \
-	"start_netconsole=" \
-		"setenv ncip $serverip; " \
-		"setenv bootdelay 10; " \
-		"setenv stdin serial,nc; " \
-		"setenv stdout serial,nc; " \
-		"setenv stderr serial,nc; " \
-		"version\0" \
-	"preboot=run if_netconsole start_netconsole\0"\
-	"eeprom_program="\
-		"if test $board_eeprom_header = bbb_blank; then " \
-			"run eeprom_dump; run eeprom_blank; run eeprom_bbb_header; run eeprom_dump; reset; fi; " \
-		"if test $board_eeprom_header = bbbl_blank; then " \
-			"run eeprom_dump; run eeprom_blank; run eeprom_bbb_header; run eeprom_bbbl_footer; run eeprom_dump; reset; fi; " \
-		"if test $board_eeprom_header = bbbw_blank; then " \
-			"run eeprom_dump; run eeprom_blank; run eeprom_bbb_header; run eeprom_bbbw_footer; run eeprom_dump; reset; fi; " \
-		"if test $board_eeprom_header = os00_blank; then " \
-			"run eeprom_dump; run eeprom_blank; run eeprom_bbb_header; run eeprom_os00_footer; run eeprom_dump; reset; fi; " \
-		"if test $board_eeprom_header = beaglelogic_blank; then " \
-			"run eeprom_dump; run eeprom_blank; run eeprom_beaglelogic; run eeprom_dump; reset; fi;  \0" \
-	"findfdt="\
-		"echo board_name=[$board_name] ...; " \
-		"if test $board_name = A335PBGL; then " \
-			"setenv fdtfile am335x-pocketbeagle.dtb; fi; " \
-		"if test $board_name = A335BLGC; then " \
-			"setenv fdtfile am335x-beaglelogic.dtb; fi; " \
-		"if test $board_name = A335BONE; then " \
-			"setenv fdtfile am335x-bone.dtb; fi; " \
-		"if test $board_name = A335BNLT; then " \
-			"echo board_rev=[$board_rev] ...; " \
-			"if test $board_rev = GH01; then " \
-				"setenv fdtfile am335x-boneblack.dtb; " \
-			"elif test $board_rev = BBG1; then " \
-				"setenv fdtfile am335x-bonegreen.dtb; " \
-			"elif test $board_rev = BP00; then " \
-				"setenv fdtfile am335x-pocketbone.dtb; " \
-			"elif test $board_rev = GW1A; then " \
-				"setenv fdtfile am335x-bonegreen-wireless.dtb; " \
-			"elif test $board_rev = AIA0; then " \
-				"setenv fdtfile am335x-abbbi.dtb; " \
-			"elif test $board_rev = EIA0; then " \
-				"setenv fdtfile am335x-boneblack.dtb; " \
-			"elif test $board_rev = SE0A; then " \
-				"setenv fdtfile am335x-sancloud-bbe.dtb; " \
-			"elif test $board_rev = ME06; then " \
-				"setenv fdtfile am335x-bonegreen.dtb; " \
-			"elif test $board_rev = M10A; then " \
-				"setenv fdtfile am335x-vsc8531bbb.dtb; " \
-			"elif test $board_rev = OS00; then " \
-				"setenv fdtfile am335x-osd3358-sm-red.dtb; " \
-			"else " \
-				"setenv fdtfile am335x-boneblack.dtb; " \
-			"fi; " \
-		"fi; " \
-		"if test $board_name = BBBW; then " \
-			"setenv fdtfile am335x-boneblack-wireless.dtb; fi; " \
-		"if test $board_name = BBG1; then " \
-			"setenv fdtfile am335x-bonegreen.dtb; fi; " \
-		"if test $board_name = BBGW; then " \
-			"setenv fdtfile am335x-bonegreen-wireless.dtb; fi; " \
-		"if test $board_name = BBBL; then " \
-			"setenv fdtfile am335x-boneblue.dtb; fi; " \
-		"if test $board_name = SBBE; then " \
-			"setenv fdtfile am335x-sancloud-bbe.dtb; fi; " \
-		"if test $board_name = OS00; then " \
-			"setenv fdtfile am335x-osd3358-sm-red.dtb; fi; " \
-		"if test $board_name = A33515BB; then " \
-			"setenv fdtfile am335x-evm.dtb; fi; " \
-		"if test $board_name = A335X_SK; then " \
-			"setenv fdtfile am335x-evmsk.dtb; fi; " \
-		"if test $board_name = A335_ICE; then " \
-			"setenv fdtfile am335x-icev2.dtb; fi; " \
-		"if test $fdtfile = undefined; then " \
-			"setenv board_name A335BNLT; " \
-			"setenv board_rev EMMC; " \
-			"setenv fdtfile am335x-boneblack-emmc-overlay.dtb; " \
-		"fi; \0" \
-	"init_console=" \
-		"if test $board_name = A335_ICE; then "\
-			"setenv console ttyO3,115200n8;" \
-		"elif test $board_name = A335BLGC; then " \
-			"setenv console ttyO4,115200n8;" \
-		"else " \
-			"setenv console ttyO0,115200n8;" \
-		"fi;\0" \
-	EEWIKI_NFS \
-	EEWIKI_BOOT \
-	EEWIKI_UNAME_BOOT \
-	EEPROM_PROGRAMMING \
-	NANDARGS \
-	NETARGS \
-	DFUARGS \
-	BOOTENV
+	"console=ttyS0,115200n8\0"
 #endif
 
 /* NS16550 Configuration */
